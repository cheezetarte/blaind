# Generated by Django 4.1.3 on 2023-01-03 14:16

from django.conf import settings
import django.contrib.auth.models
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('email', models.EmailField(max_length=255, unique=True)),
                ('username', models.CharField(max_length=40)),
                ('nickname', models.CharField(max_length=20, unique=True)),
                ('profile_photo', models.ImageField(blank=True, upload_to='profile')),
                ('purpose', models.CharField(blank=True, max_length=50, null=True)),
                ('user_type', models.CharField(default='personal', max_length=50, null=True)),
                ('refresh_token', models.TextField(blank=True, null=True)),
                ('payment_date', models.DateTimeField(null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
            ],
            options={
                'db_table': 'User',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Example',
            fields=[
                ('post_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=50)),
                ('writer', models.CharField(blank=True, max_length=20)),
                ('content', models.TextField()),
                ('regdate', models.DateField(auto_now_add=True)),
                ('regtime', models.TimeField(auto_now_add=True)),
                ('updatedate', models.DateTimeField(auto_now=True)),
                ('read_cnt', models.BigIntegerField(default=0)),
                ('user_id', models.ForeignKey(db_column='user_id', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'Example',
            },
        ),
        migrations.CreateModel(
            name='Notice',
            fields=[
                ('post_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=50)),
                ('writer', models.CharField(blank=True, max_length=20)),
                ('content', models.TextField()),
                ('regdate', models.DateField(auto_now_add=True)),
                ('regtime', models.TimeField(auto_now_add=True)),
                ('updatedate', models.DateTimeField(auto_now=True)),
                ('read_cnt', models.BigIntegerField(default=0)),
                ('user_id', models.ForeignKey(db_column='user_id', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'Notice',
            },
        ),
        migrations.CreateModel(
            name='Price',
            fields=[
                ('name', models.CharField(max_length=50, primary_key=True, serialize=False)),
                ('price', models.IntegerField()),
                ('resolution', models.IntegerField(default=720)),
                ('capacity', models.BigIntegerField(default=209715200)),
            ],
            options={
                'db_table': 'Price',
            },
        ),
        migrations.CreateModel(
            name='QnA',
            fields=[
                ('post_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=50)),
                ('writer', models.CharField(blank=True, max_length=20)),
                ('content', models.TextField()),
                ('regdate', models.DateField(auto_now_add=True)),
                ('regtime', models.TimeField(auto_now_add=True)),
                ('updatedate', models.DateTimeField(auto_now=True)),
                ('read_cnt', models.BigIntegerField(default=0)),
                ('user_id', models.ForeignKey(db_column='user_id', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'QnA',
            },
        ),
        migrations.CreateModel(
            name='VerifyEmail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(max_length=255, unique=True)),
                ('number', models.IntegerField(default=0)),
                ('is_verify', models.BooleanField(default=False)),
            ],
            options={
                'db_table': 'VerifyEmail',
            },
        ),
        migrations.CreateModel(
            name='Video',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('video', models.FileField(blank=True, null=True, upload_to='')),
                ('video_path', models.CharField(blank=True, max_length=300)),
                ('download_date', models.DateTimeField(blank=True, null=True)),
                ('capacity', models.BigIntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'video',
            },
        ),
        migrations.CreateModel(
            name='QnAReply',
            fields=[
                ('reply_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('writer', models.CharField(max_length=20)),
                ('content', models.TextField()),
                ('regdate', models.DateField(auto_now_add=True)),
                ('regtime', models.TimeField(auto_now_add=True)),
                ('updatedate', models.DateTimeField(auto_now=True)),
                ('image', models.ImageField(blank=True, upload_to='')),
                ('post_id', models.ForeignKey(db_column='post_id', on_delete=django.db.models.deletion.CASCADE, to='blaind.qna')),
            ],
            options={
                'db_table': 'QnAReply',
            },
        ),
        migrations.CreateModel(
            name='QnAFile',
            fields=[
                ('file_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('filename', models.CharField(max_length=100)),
                ('regdate', models.DateTimeField(auto_now_add=True)),
                ('post_id', models.ForeignKey(db_column='post_id', on_delete=django.db.models.deletion.CASCADE, to='blaind.qna')),
            ],
            options={
                'db_table': 'QnAFile',
            },
        ),
        migrations.CreateModel(
            name='NoticeReply',
            fields=[
                ('reply_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('writer', models.CharField(max_length=20)),
                ('content', models.TextField()),
                ('regdate', models.DateField(auto_now_add=True)),
                ('regtime', models.TimeField(auto_now_add=True)),
                ('updatedate', models.DateTimeField(auto_now=True)),
                ('image', models.ImageField(blank=True, upload_to='')),
                ('post_id', models.ForeignKey(db_column='post_id', on_delete=django.db.models.deletion.CASCADE, to='blaind.notice')),
            ],
            options={
                'db_table': 'NoticeReply',
            },
        ),
        migrations.CreateModel(
            name='NoticeFile',
            fields=[
                ('file_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('filename', models.CharField(max_length=100)),
                ('regdate', models.DateTimeField(auto_now_add=True)),
                ('post_id', models.ForeignKey(db_column='post_id', on_delete=django.db.models.deletion.CASCADE, to='blaind.notice')),
            ],
            options={
                'db_table': 'NoticeFile',
            },
        ),
        migrations.CreateModel(
            name='ExampleReply',
            fields=[
                ('reply_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('writer', models.CharField(max_length=20)),
                ('content', models.CharField(max_length=1000)),
                ('regdate', models.DateTimeField(auto_now_add=True)),
                ('updatedate', models.DateTimeField(auto_now=True)),
                ('image', models.ImageField(blank=True, upload_to='')),
                ('post_id', models.ForeignKey(db_column='post_id', on_delete=django.db.models.deletion.CASCADE, to='blaind.example')),
            ],
            options={
                'db_table': 'ExampleReply',
            },
        ),
        migrations.CreateModel(
            name='ExampleFile',
            fields=[
                ('file_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('filename', models.CharField(max_length=100)),
                ('regdate', models.DateTimeField(auto_now_add=True)),
                ('post_id', models.ForeignKey(db_column='post_id', on_delete=django.db.models.deletion.CASCADE, to='blaind.example')),
            ],
            options={
                'db_table': 'ExampleFile',
            },
        ),
        migrations.AddField(
            model_name='user',
            name='price',
            field=models.ForeignKey(db_column='price', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='blaind.price'),
        ),
        migrations.AddField(
            model_name='user',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions'),
        ),
    ]
